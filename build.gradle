buildscript {
	repositories {
		jcenter()
	}

	dependencies {
		classpath 'com.eriwen:gradle-js-plugin:2.12.0'
		classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.3'
	}
}

allprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'

	repositories {
		jcenter()
		mavenCentral()
	}

	dependencies {
		compile 'org.eclipse.jetty:jetty-server:9.4.8.v20171121'
		compile 'org.eclipse.jetty:jetty-servlet:9.4.8.v20171121'
		compile 'org.slf4j:slf4j-api:1.7.25'
		compile 'ch.qos.logback:logback-core:1.2.3'
		compile 'ch.qos.logback:logback-classic:1.2.3'
		compile 'com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:20180219.1'
		compile 'com.fasterxml.jackson.jr:jackson-jr-objects:2.9.0'
		compile 'com.squareup.okhttp3:okhttp:3.10.0'
		testCompile 'junit:junit:4.12'
		testCompile 'org.mockito:mockito-core:2.16.0'
	}
	
	task deleteLogs(type: Delete) {
		description 'Deletes all .log files from project directory'
		
		delete fileTree(projectDir) {
			include '**/*.log'
		}
	}
}

project(':common') {
	eclipse.project {
		name = 'snail-scuffle-common'
	}
}

project(':game') {
	apply plugin: 'com.github.johnrengelman.shadow'
	apply plugin: 'application'
	apply plugin: 'com.eriwen.gradle.js'
	
	ext {
		webrootSrc = 'src/main/webapp'
		webrootDest = 'src/main/resources/webroot'
	}

	dependencies {
		compile project(':common')
	}

	eclipse.project {
		name = 'snail-scuffle-game'
	}

	mainClassName = 'com.snailscuffle.game.Main'
	
	javascript.source {
		dev.js {
			srcDir "${webrootSrc}/js"
			include '*.js'
			exclude '*.min.js'
		}
		prod.js {
			srcDir "${webrootSrc}/js"
			include '*.min.js'
		}
	}
	
	combineJs {
		encoding = 'UTF-8'
		source = javascript.source.dev.js.files
		dest = file("${webrootDest}/js/all.js")
	}
	
	minifyJs {
		source = combineJs
		dest = file("${webrootDest}/js/all-min.js")
		sourceMap = file("${webrootDest}/js/all.sourcemap.json")
		closure {
			compilationLevel = 'WHITESPACE_ONLY'
			compilerOptions.languageIn = 'ECMASCRIPT6_STRICT'
		}
	}
	
	gzipJs {
		source = file("${webrootDest}/js/all-min.js")
		dest = file("${webrootDest}/js/all-min.js.gz")
	}
	
	task copyHtml(type: Copy) {
		outputs.upToDateWhen { false }
		
		def htmlFiles = [:]
		file("src/main/webapp/html").eachFile() {
			file -> htmlFiles[file.name] = file.text
		}
		
		from "${webrootSrc}"
		include 'index.html'
		into "${webrootDest}"
		expand(htmlFiles: htmlFiles)
	}
	
	task copyExternalJs(type: Copy) {
		from "${webrootSrc}/js/external"
		include '*.js'
		into "${webrootDest}/js/external"
	}
	
	task copyCss(type: Copy) {
		from "${webrootSrc}/css"
		include '*.css'
		into "${webrootDest}/css"
	}
	
	task copyAssets(type: Copy) {
		from "${webrootSrc}/assets"
		into "${webrootDest}/assets"
	}
	
	gzipJs.dependsOn minifyJs
	processResources.dependsOn gzipJs
	processResources.dependsOn copyHtml
	processResources.dependsOn copyExternalJs
	processResources.dependsOn copyCss
	processResources.dependsOn copyAssets
}

project(':simulator') {
	apply plugin: 'com.github.johnrengelman.shadow'
	apply plugin: 'application'
	
	dependencies {
		compile project(':common')	
		compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.8.11.2'
	}

	eclipse.project {
		name = 'snail-scuffle-simulator'
	}

	mainClassName = 'com.snailscuffle.simulator.Main'
}		


